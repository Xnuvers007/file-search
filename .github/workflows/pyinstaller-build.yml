name: PyInstaller Build and Release

on:
  push:
    tags:
      - "V*"  # Jalan hanya saat push tag seperti v1.2.0
  workflow_dispatch:

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
      - name: 1. Checkout repository
        uses: actions/checkout@v4

      - name: 2. Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: 3. Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller scikit-learn pymupdf

      - name: 4. Extract version from tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      # âœ… UPX setup for Windows/Linux
      - name: 5a. Setup UPX for Windows/Linux
        if: matrix.os != 'macos-latest'
        uses: crazy-max/ghaction-upx@v3
        with:
          version: latest

      # âœ… UPX setup for macOS
      - name: 5b. Install UPX on macOS
        if: matrix.os == 'macos-latest'
        run: brew install upx

      - name: 6. Build executable with PyInstaller using UPX
        shell: bash
        run: |
          pyinstaller --noconfirm --clean --onefile --windowed \
            --name FileSearchPro \
            --icon=assets/search_icon.ico \
            --upx-dir=/usr/local/bin \
            main.py

      - name: 7. Debug dist folder (optional)
        run: ls -lh dist/

      - name: 8. Rename output file
        shell: bash
        run: |
          VERSION="${{ env.VERSION }}"
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            ARTIFACT_NAME="File-Search-Pro-v${VERSION}-Windows-x64.exe"
            mv dist/FileSearchPro.exe "dist/$ARTIFACT_NAME"
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            ARTIFACT_NAME="File-Search-Pro-v${VERSION}-macOS"
            mv dist/FileSearchPro "dist/$ARTIFACT_NAME"
          else
            ARTIFACT_NAME="File-Search-Pro-v${VERSION}-Linux-x64"
            mv dist/FileSearchPro "dist/$ARTIFACT_NAME"
          fi
          echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_ENV

      - name: 9. Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: dist/${{ env.ARTIFACT_NAME }}

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Create GitHub release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ðŸŽ‰ New release of **File Content Search Pro**

            âœ… Built using PyInstaller  
            âœ… UPX compression enabled for all OS  
            âœ… Includes support for Windows, macOS, and Linux

            Download the appropriate version for your OS below.
          files: artifacts/*/*
